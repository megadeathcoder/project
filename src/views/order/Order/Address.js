// import React,{useEffect, useState} from 'react';
import {useNavigate,useLocation } from 'react-router-dom';
// import Select, { components } from 'react-select';

import React,{useState,useEffect} from 'react';
// import { useLocation } from 'react-router-dom';
// import Select from 'react-select';


// import { useParams } from 'react-router-dom';


import {
  
  Row,
  Col,
  Button,

} from 'reactstrap';

import ComponentCard from '../../../components/ComponentCard';


const Edit= () => {
  const location = useLocation();
  const  id = location.state || {};
  const navigate= useNavigate();
  const [data, setData] = useState([]); 
  const [data2, setData2] = useState([]);
  const [data3, setData3] = useState([]);

// console.log('data',companyAddress[0].AddressLine1);
// console.log('location',location.state);

const handleEditAdd = () => {
  // Navigate to the edit page with the item's id
  // Navigate(`/resources/address-types/edit/${itemId}`);
  navigate('/order/customers/address/add',{state: id});
};

const handleEditAddress = (customer)=>{
  const newCustomerId = id;
  customer.newCustomerId = newCustomerId ;
  console.log('address',id, location.state);
  console.log('address',customer);
   navigate('/order/customers/address/edit', {state: customer });
 } 

 const handleDeleteClick = async (itemId) => {
  try {
    // Call your API endpoint to delete the item
    const token = localStorage.getItem('userToken');
    const response = await fetch(`https://factory.teamasia.in/api/public/addresses/${itemId}`, {
      method: 'DELETE',
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    // Check if the request was successful
    if (!response.ok) {
      throw new Error(`Error: ${response.statusText}`);
    }

    // Filter out the deleted item from your data state
    const updatedData = data.filter((item) => item.id !== itemId);
    setData(updatedData);

    console.log('Item deleted successfully');
  } catch (error) {
    //only checks for error that are generated by fetch function , and cors 
    console.error('Failed to delete the item', error);
  }
};

function getStateNameById(stateId) {
  const stateName = data3.find(state => state.id === stateId);
  console.log('state',stateName);
  return stateName ? stateName.name : 'Unknown State';
}

// This function finds the name of the country by its ID
function getCityNameById(cityId) {
  const cityName = data2.find(country => country.id === cityId);
  console.log('city',cityName);
  return cityName ? cityName.name : 'Unknown City';
}

const citiesWithNames = data.map(city => ({
  ...city,
  stateName: getStateNameById(city.state_id),
  cityName: getCityNameById(city.city_id)
}));

useEffect(() => {
  
  // Fetch the data from the API
  const fetchData = async () => {
    const token = localStorage.getItem('userToken');
    // console.log('token',token);
    const response = await fetch('https://factory.teamasia.in/api/public/addresses', {
      method: 'GET', 
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    // console.log('result',response);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const result = await response.json();
    console.log("responsejson",result);
    setData(result.addresses); 
  };

  const fetchData2 = async () => {
    const token = localStorage.getItem('userToken');
    // console.log('token',token);
    const response = await fetch('https://factory.teamasia.in/api/public/cities', {
      method: 'GET', 
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    // console.log('result',response);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const result = await response.json();
    console.log("responsejson2",result);
    setData2(result.cities); 
  };
  const fetchData3 = async () => {
    const token = localStorage.getItem('userToken');
    // console.log('token',token);
    const response = await fetch('https://factory.teamasia.in/api/public/states', {
      method: 'GET', 
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    // console.log('result',response);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const result = await response.json();
    console.log("responsejson3",result);
    setData3(result.states); 
  };

  fetchData3();
  fetchData2();
  fetchData();


},[]);

  return (

    <ComponentCard
    title=""
    subtitle={
      <p>
        {/* Overview of the projects */}
      </p>
    }
  >
     <Row>
      <Col md="8">
        <Button className='my-btn-color' style={{ marginBottom: '1rem',marginRight:'10px' }} onClick={() => handleEditAdd()}>
          Add Address
        </Button>
      </Col>
    </Row>

   
     
<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>
  
<table className="table">        
                  <thead>
                        <tr>
                        <Row className='mt-4'>
                          <Col md="6">
                              <td >Address</td>
                          </Col>
                          <Col md="2">
                              <td>City</td>
                          </Col>
                          <Col md="2">
                              <td >State</td>
                          </Col>
                          <Col md="2">
                              <td >Actions</td>
                          </Col>
                          
                        </Row>
                        </tr>
                      </thead>
          
              <tbody>
              {citiesWithNames.map((customer) => (
                  <tr key={customer.id}>
                    <Row>
                      <Col md="6">{customer.address_line_1}</Col>
                      <Col md="2">{customer.cityName}</Col>
                      <Col md="2">{customer.stateName}</Col>
                      <Col md="2"><button type="button" className="btn mybtncustomer btn-secondary btn-sm mr-2" onClick={() => handleEditAddress(customer)}><i className="bi bi-pencil-fill my-pen-color" /></button><button type="button" className="btn mybtncustomer btn-secondary btn-sm mr-2" onClick={() => handleDeleteClick(customer.id)}><i className="bi bi-trash-fill my-trash-color" /></button></Col>
                     
                    </Row>
                    
                  </tr>
                ))}
                
              </tbody>
            </table>
 
</div>
     
   
   
  </ComponentCard>



   
   
  );
};

export default Edit