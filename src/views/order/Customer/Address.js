// import React,{useEffect, useState} from 'react';
import { useLocation,useNavigate } from 'react-router-dom';
// import Select, { components } from 'react-select';

import React,{useState} from 'react';
// import { useLocation } from 'react-router-dom';
// import Select from 'react-select';


// import { useParams } from 'react-router-dom';


import {
  
  Row,
  Col,
  Button,

} from 'reactstrap';

import ComponentCard from '../../../components/ComponentCard';


const Edit= () => {
  const location = useLocation();
  const companyAddress = location.state || {}; // Default to an empty object if state is undefined
  const navigate= useNavigate();
  const [data, setData] = useState(companyAddress); 


console.log('data',companyAddress[0].AddressLine1);
console.log('location',location.state);

const handleEditAdd = () => {
  // Navigate to the edit page with the item's id
  // Navigate(`/resources/address-types/edit/${itemId}`);
  navigate('/order/customers/address/add');
};

const handleEditAddress = ()=>{
    
  console.log('address');
   navigate('/order/customers/address/edit', {state:companyAddress });
 } 

 const handleDeleteClick = async (itemId) => {
  try {
    // Call your API endpoint to delete the item
    // const response = await fetch(`your-api-endpoint/${itemId}`, {
    //   method: 'DELETE',
    //   headers: {
    //     // Your headers here (if needed)
    //   }
    // });

    // Check if the request was successful
    // if (!response.ok) {
    //   throw new Error(`Error: ${response.statusText}`);
    // }

    // Filter out the deleted item from your data state
    const updatedData = data.filter((item) => item.id !== itemId);
    setData(updatedData);

    console.log('Item deleted successfully');
  } catch (error) {
    //only checks for error that are generated by fetch function , and cors 
    console.error('Failed to delete the item', error);
  }
};

 
  return (

    <ComponentCard
    title=""
    subtitle={
      <p>
        {/* Overview of the projects */}
      </p>
    }
  >
     <Row>
      <Col md="8">
        <Button className='my-btn-color' style={{ marginBottom: '1rem',marginRight:'10px' }} onClick={() => handleEditAdd()}>
          Add Address
        </Button>
      </Col>
    </Row>

   
     
<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>
  
<table className="table">        
                  <thead>
                        <tr>
                        <Row className='mt-4'>
                          <Col md="6">
                              <td >Company Name</td>
                          </Col>
                          <Col md="2">
                              <td>City</td>
                          </Col>
                          <Col md="2">
                              <td >State</td>
                          </Col>
                          <Col md="2">
                              <td >Actions</td>
                          </Col>
                          
                        </Row>
                        </tr>
                      </thead>
          
              <tbody>
              {data.map((customer) => (
                  <tr key={customer.id}>
                    <Row>
                      <Col md="6">{customer.AddressLine1}</Col>
                      <Col md="2">{customer.City}</Col>
                      <Col md="2">{customer.State}</Col>
                      <Col md="2"><button type="button" className="btn mybtncustomer btn-secondary btn-sm mr-2" onClick={() => handleEditAddress(customer)}><i className="bi bi-pencil-fill my-pen-color" /></button><button type="button" className="btn mybtncustomer btn-secondary btn-sm mr-2" onClick={() => handleDeleteClick(customer.id)}><i className="bi bi-trash-fill my-trash-color" /></button></Col>
                     
                    </Row>
                    
                  </tr>
                ))}
                
              </tbody>
            </table>
 
</div>
     
   
   
  </ComponentCard>



   
   
  );
};

export default Edit